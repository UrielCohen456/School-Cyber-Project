//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.MainServer {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseEntity", Namespace="http://schemas.datacontract.org/2004/07/DataLayer")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Client.MainServer.Friend))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Client.MainServer.Message))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Client.MainServer.User))]
    public partial class BaseEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Friend", Namespace="http://schemas.datacontract.org/2004/07/DataLayer")]
    [System.SerializableAttribute()]
    public partial class Friend : Client.MainServer.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateAddedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.MainServer.FriendStatus StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserId1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserId2Field;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateAdded {
            get {
                return this.DateAddedField;
            }
            set {
                if ((this.DateAddedField.Equals(value) != true)) {
                    this.DateAddedField = value;
                    this.RaisePropertyChanged("DateAdded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.MainServer.FriendStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId1 {
            get {
                return this.UserId1Field;
            }
            set {
                if ((this.UserId1Field.Equals(value) != true)) {
                    this.UserId1Field = value;
                    this.RaisePropertyChanged("UserId1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId2 {
            get {
                return this.UserId2Field;
            }
            set {
                if ((this.UserId2Field.Equals(value) != true)) {
                    this.UserId2Field = value;
                    this.RaisePropertyChanged("UserId2");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Message", Namespace="http://schemas.datacontract.org/2004/07/DataLayer")]
    [System.SerializableAttribute()]
    public partial class Message : Client.MainServer.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FromIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ToIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FromId {
            get {
                return this.FromIdField;
            }
            set {
                if ((this.FromIdField.Equals(value) != true)) {
                    this.FromIdField = value;
                    this.RaisePropertyChanged("FromId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ToId {
            get {
                return this.ToIdField;
            }
            set {
                if ((this.ToIdField.Equals(value) != true)) {
                    this.ToIdField = value;
                    this.RaisePropertyChanged("ToId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/DataLayer")]
    [System.SerializableAttribute()]
    public partial class User : Client.MainServer.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FriendStatus", Namespace="http://schemas.datacontract.org/2004/07/DataLayer")]
    public enum FriendStatus : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Waiting = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Accepted = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Denied = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Removed = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationFault", Namespace="http://schemas.datacontract.org/2004/07/MainServer")]
    [System.SerializableAttribute()]
    public partial class OperationFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Operation {
            get {
                return this.OperationField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationField, value) != true)) {
                    this.OperationField = value;
                    this.RaisePropertyChanged("Operation");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GameSession", Namespace="http://schemas.datacontract.org/2004/07/DataLayer")]
    [System.SerializableAttribute()]
    public partial class GameSession : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.MainServer.GameSessionData GameSessionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Client.MainServer.User> UsersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.MainServer.GameSessionData GameSessionData {
            get {
                return this.GameSessionDataField;
            }
            set {
                if ((object.ReferenceEquals(this.GameSessionDataField, value) != true)) {
                    this.GameSessionDataField = value;
                    this.RaisePropertyChanged("GameSessionData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Client.MainServer.User> Users {
            get {
                return this.UsersField;
            }
            set {
                if ((object.ReferenceEquals(this.UsersField, value) != true)) {
                    this.UsersField = value;
                    this.RaisePropertyChanged("Users");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GameSessionData", Namespace="http://schemas.datacontract.org/2004/07/DataLayer")]
    [System.SerializableAttribute()]
    public partial class GameSessionData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxPlayersCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasPassword {
            get {
                return this.HasPasswordField;
            }
            set {
                if ((this.HasPasswordField.Equals(value) != true)) {
                    this.HasPasswordField = value;
                    this.RaisePropertyChanged("HasPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxPlayersCount {
            get {
                return this.MaxPlayersCountField;
            }
            set {
                if ((this.MaxPlayersCountField.Equals(value) != true)) {
                    this.MaxPlayersCountField = value;
                    this.RaisePropertyChanged("MaxPlayersCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MainServer.IClientService", CallbackContract=typeof(Client.MainServer.IClientServiceCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IClientService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/Login", ReplyAction="http://tempuri.org/IClientService/LoginResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Client.MainServer.OperationFault), Action="http://tempuri.org/IClientService/LoginOperationFaultFault", Name="OperationFault", Namespace="http://schemas.datacontract.org/2004/07/MainServer")]
        Client.MainServer.User Login(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/Login", ReplyAction="http://tempuri.org/IClientService/LoginResponse")]
        System.Threading.Tasks.Task<Client.MainServer.User> LoginAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/Signup", ReplyAction="http://tempuri.org/IClientService/SignupResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Client.MainServer.OperationFault), Action="http://tempuri.org/IClientService/SignupOperationFaultFault", Name="OperationFault", Namespace="http://schemas.datacontract.org/2004/07/MainServer")]
        Client.MainServer.User Signup(string username, string password, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/Signup", ReplyAction="http://tempuri.org/IClientService/SignupResponse")]
        System.Threading.Tasks.Task<Client.MainServer.User> SignupAsync(string username, string password, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/Logout", ReplyAction="http://tempuri.org/IClientService/LogoutResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Client.MainServer.OperationFault), Action="http://tempuri.org/IClientService/LogoutOperationFaultFault", Name="OperationFault", Namespace="http://schemas.datacontract.org/2004/07/MainServer")]
        void Logout();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/Logout", ReplyAction="http://tempuri.org/IClientService/LogoutResponse")]
        System.Threading.Tasks.Task LogoutAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetFriends", ReplyAction="http://tempuri.org/IClientService/GetFriendsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Client.MainServer.OperationFault), Action="http://tempuri.org/IClientService/GetFriendsOperationFaultFault", Name="OperationFault", Namespace="http://schemas.datacontract.org/2004/07/MainServer")]
        System.Collections.Generic.List<Client.MainServer.Friend> GetFriends(int friendCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetFriends", ReplyAction="http://tempuri.org/IClientService/GetFriendsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Client.MainServer.Friend>> GetFriendsAsync(int friendCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddFriend", ReplyAction="http://tempuri.org/IClientService/AddFriendResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Client.MainServer.OperationFault), Action="http://tempuri.org/IClientService/AddFriendOperationFaultFault", Name="OperationFault", Namespace="http://schemas.datacontract.org/2004/07/MainServer")]
        Client.MainServer.Friend AddFriend(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/AddFriend", ReplyAction="http://tempuri.org/IClientService/AddFriendResponse")]
        System.Threading.Tasks.Task<Client.MainServer.Friend> AddFriendAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/ChangeFriendStatus", ReplyAction="http://tempuri.org/IClientService/ChangeFriendStatusResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Client.MainServer.OperationFault), Action="http://tempuri.org/IClientService/ChangeFriendStatusOperationFaultFault", Name="OperationFault", Namespace="http://schemas.datacontract.org/2004/07/MainServer")]
        void ChangeFriendStatus(int userId, Client.MainServer.FriendStatus status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/ChangeFriendStatus", ReplyAction="http://tempuri.org/IClientService/ChangeFriendStatusResponse")]
        System.Threading.Tasks.Task ChangeFriendStatusAsync(int userId, Client.MainServer.FriendStatus status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/SendMessage", ReplyAction="http://tempuri.org/IClientService/SendMessageResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Client.MainServer.OperationFault), Action="http://tempuri.org/IClientService/SendMessageOperationFaultFault", Name="OperationFault", Namespace="http://schemas.datacontract.org/2004/07/MainServer")]
        void SendMessage(int userId, string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/SendMessage", ReplyAction="http://tempuri.org/IClientService/SendMessageResponse")]
        System.Threading.Tasks.Task SendMessageAsync(int userId, string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetConversationWithUser", ReplyAction="http://tempuri.org/IClientService/GetConversationWithUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Client.MainServer.OperationFault), Action="http://tempuri.org/IClientService/GetConversationWithUserOperationFaultFault", Name="OperationFault", Namespace="http://schemas.datacontract.org/2004/07/MainServer")]
        System.Collections.Generic.List<Client.MainServer.Message> GetConversationWithUser(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetConversationWithUser", ReplyAction="http://tempuri.org/IClientService/GetConversationWithUserResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Client.MainServer.Message>> GetConversationWithUserAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetActiveGameSessions", ReplyAction="http://tempuri.org/IClientService/GetActiveGameSessionsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Client.MainServer.OperationFault), Action="http://tempuri.org/IClientService/GetActiveGameSessionsOperationFaultFault", Name="OperationFault", Namespace="http://schemas.datacontract.org/2004/07/MainServer")]
        System.Collections.Generic.List<Client.MainServer.GameSession> GetActiveGameSessions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetActiveGameSessions", ReplyAction="http://tempuri.org/IClientService/GetActiveGameSessionsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Client.MainServer.GameSession>> GetActiveGameSessionsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IClientServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/NewUserJoinedGameSession", ReplyAction="http://tempuri.org/IClientService/NewUserJoinedGameSessionResponse")]
        void NewUserJoinedGameSession(Client.MainServer.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/NewMessageReceived", ReplyAction="http://tempuri.org/IClientService/NewMessageReceivedResponse")]
        void NewMessageReceived(Client.MainServer.User user, string messageContent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/FriendStatusChanged", ReplyAction="http://tempuri.org/IClientService/FriendStatusChangedResponse")]
        void FriendStatusChanged(Client.MainServer.Friend friend);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IClientServiceChannel : Client.MainServer.IClientService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClientServiceClient : System.ServiceModel.DuplexClientBase<Client.MainServer.IClientService>, Client.MainServer.IClientService {
        
        public ClientServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ClientServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ClientServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ClientServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ClientServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public Client.MainServer.User Login(string username, string password) {
            return base.Channel.Login(username, password);
        }
        
        public System.Threading.Tasks.Task<Client.MainServer.User> LoginAsync(string username, string password) {
            return base.Channel.LoginAsync(username, password);
        }
        
        public Client.MainServer.User Signup(string username, string password, string name) {
            return base.Channel.Signup(username, password, name);
        }
        
        public System.Threading.Tasks.Task<Client.MainServer.User> SignupAsync(string username, string password, string name) {
            return base.Channel.SignupAsync(username, password, name);
        }
        
        public void Logout() {
            base.Channel.Logout();
        }
        
        public System.Threading.Tasks.Task LogoutAsync() {
            return base.Channel.LogoutAsync();
        }
        
        public System.Collections.Generic.List<Client.MainServer.Friend> GetFriends(int friendCount) {
            return base.Channel.GetFriends(friendCount);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Client.MainServer.Friend>> GetFriendsAsync(int friendCount) {
            return base.Channel.GetFriendsAsync(friendCount);
        }
        
        public Client.MainServer.Friend AddFriend(int userId) {
            return base.Channel.AddFriend(userId);
        }
        
        public System.Threading.Tasks.Task<Client.MainServer.Friend> AddFriendAsync(int userId) {
            return base.Channel.AddFriendAsync(userId);
        }
        
        public void ChangeFriendStatus(int userId, Client.MainServer.FriendStatus status) {
            base.Channel.ChangeFriendStatus(userId, status);
        }
        
        public System.Threading.Tasks.Task ChangeFriendStatusAsync(int userId, Client.MainServer.FriendStatus status) {
            return base.Channel.ChangeFriendStatusAsync(userId, status);
        }
        
        public void SendMessage(int userId, string message) {
            base.Channel.SendMessage(userId, message);
        }
        
        public System.Threading.Tasks.Task SendMessageAsync(int userId, string message) {
            return base.Channel.SendMessageAsync(userId, message);
        }
        
        public System.Collections.Generic.List<Client.MainServer.Message> GetConversationWithUser(int userId) {
            return base.Channel.GetConversationWithUser(userId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Client.MainServer.Message>> GetConversationWithUserAsync(int userId) {
            return base.Channel.GetConversationWithUserAsync(userId);
        }
        
        public System.Collections.Generic.List<Client.MainServer.GameSession> GetActiveGameSessions() {
            return base.Channel.GetActiveGameSessions();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Client.MainServer.GameSession>> GetActiveGameSessionsAsync() {
            return base.Channel.GetActiveGameSessionsAsync();
        }
    }
}
